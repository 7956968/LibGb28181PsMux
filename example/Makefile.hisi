# add toolchain path here
TOOLCHAIN   := arm-hisiv300-linux-

# target program
TARGET_PROG := psmux_example 

# target library
TARGET_LIB  :=

# for intermediate files
TEMP_DIR    := obj

# list of all source files
SOURCES     := PsMuxExample.cpp 

# include and library 
INC_DIRS    := -I../libpsmux/inc
LIB_DIRS    := -L..
LD_LIBS     := -lpsmux.hisi
 
# complie & link variable
ifeq ($(MAKECMDGOALS), debug)   
    CFLAGS := -Wall -O0 -g
else
    CFLAGS := -O2 
endif   
CFLAGS     += $(INC_DIRS)
CFLAGS     += -DHISI_CHIPSET_HI3516A
CXXFLAGS    = $(CFLAGS)
LDFLAGS    := 

# shell command
CC    := $(TOOLCHAIN)gcc
CXX   := $(TOOLCHAIN)g++
AR    := $(TOOLCHAIN)ar
RM    := rm -rf
MKDIR := mkdir -p
SED   := sed
MV    := mv

# init sources & objects & depends
source_short_name := $(notdir $(SOURCES))
sources_c   := $(filter %.c, $(SOURCES))
sources_cpp := $(filter %.cpp, $(SOURCES))
source_base_name := $(basename $(source_short_name))
objs        := $(addprefix $(TEMP_DIR)/, $(addsuffix .o, $(source_base_name)))
deps        := $(addprefix $(TEMP_DIR)/, $(addsuffix .d, $(source_base_name)))

# create intermediate file directory
$(shell $(MKDIR) $(TEMP_DIR))

# add vpath
vpath %.c $(sort $(dir $(sources_c)))
vpath %.cpp $(sort $(dir $(sources_cpp)))

# make-depend(depend-file,source-file,object-file,cc)
define make-depend
  $(RM) $1;                                     \
  $4 $(CFLAGS) -MM $2 |                         \
  $(SED) 's,\($(notdir $3)\): ,$3: ,' > $1.tmp; \
  $(SED) -e 's/#.*//'                           \
         -e 's/^[^:]*: *//'                     \
         -e 's/ *\\$$//'                        \
         -e '/^$$/ d'                           \
         -e 's/$$/ :/' < $1.tmp >> $1.tmp;      \
  $(MV) $1.tmp $1;
endef

.PHONY: all release debug clean show

all: $(TARGET_PROG) $(TARGET_LIB)

release: $(all)

debug: $(all)

$(TARGET_PROG): $(objs)
ifeq "$(strip $(sources_cpp))" ""
	$(CC) $(LDFLAGS) $^ $(LIB_DIRS) $(LD_LIBS) -o $@
else
	$(CXX) $(LDFLAGS) $^ $(LIB_DIRS) $(LD_LIBS) -o $@
endif

$(TARGET_LIB): $(objs)
	$(AR) -r $@ $^

# generated depend files
# actually generated after object generatedd, beacasue it only used when next make)
ifneq "$(MAKECMDGOALS)" "clean"
sinclude $(deps)
endif

# rules to generated objects file
$(TEMP_DIR)/%.o: %.c
	@$(call make-depend,$(patsubst %.o,%.d,$@),$<,$@,$(CC))
	$(CC) $(CFLAGS) -o $@ -c $<

$(TEMP_DIR)/%.o: %.cpp
	@$(call make-depend,$(patsubst %.o,%.d,$@),$<,$@,$(CXX))
	$(CXX) $(CXXFLAGS) -o $@ -c $<

clean: 
	$(RM) $(TEMP_DIR)
	$(RM) $(TARGET_PROG) $(TARGET_LIB)

show:
	@echo $(objs)
